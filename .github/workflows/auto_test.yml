name: auto_test

# This action is triggered:
# 1. when someone creates a pull request for a merge to the master branch
# 2. when changes are merged into the master branch (via a pull request)
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Below are jobs, each of which runs sequentially.
jobs:
  # This job builds the box model and runs our test suite.
  build:
    runs-on: ${{ matrix.os }}

    # A build matrix storing all desired configurations.
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        build-type: [Debug, Release]
        fp-precision: [single, double]

    # Environment variables
    env:
      FC: gfortran

    # Steps for building and running tests.
    steps:

    - name: Installing MPI and GFortran (Linux)
      if: contains(matrix.os, 'ubuntu')
      run: sudo apt-get install gfortran libopenmpi-dev

    - name: Installing MPI and GFortran (Mac)
      if: contains(matrix.os, 'macos')
      run: brew install gfortran open-mpi

    - name: Checking out repository
      uses: actions/checkout@v2
      with:
        submodules: recursive

    - name: Configuring haero (${{ matrix.build-type }}, ${{ matrix.fp-precision }} precision)
      run: |
        ./setup build
        cd build
        cmake \
          -DCMAKE_INSTALL_PREFIX=`pwd`/build \
          -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
          -DCMAKE_CXX_COMPILER=mpicxx \
          -DCMAKE_C_COMPILER=mpicc \
          -DCMAKE_Fortran_COMPILER=mpif90 \
          -DHAERO_PRECISION=${{ matrix.fp-precision }} \
          -DHAERO_ENABLE_DRIVER=ON \
          -DHAERO_AUTOTESTER=ON \
          -G "Unix Makefiles" \
          ..

    - name: Building haero (${{ matrix.build-type }}, ${{ matrix.fp-precision }} precision)
      run: |
        cd build
        make -j

    - name: Running tests (${{ matrix.build-type }}, ${{ matrix.fp-precision }} precision)
      run: |
        cd build
        ctest -V

    - name: Installing haero (${{ matrix.build-type }}, ${{ matrix.fp-precision }} precision)
      run: |
        cd build
        make install

